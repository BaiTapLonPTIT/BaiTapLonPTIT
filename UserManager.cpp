#include "UserManager.h"
// Include file header khai bao lop UserManager

#include "Hash.h"
#include <fstream>   // Thu vien ho tro doc/ghi file
#include <sstream>   // Thu vien ho tro xu ly chuoi (string stream)

// Ham doc du lieu nguoi dung tu file
bool UserManager::loadFromFile(const std::string& filename) {
    users.clear();  // Xoa toan bo danh sach nguoi dung hien tai
    std::ifstream fin(filename);  // Mo file de doc
    if (!fin) return false;       // Neu mo file that bai thi tra ve false

    std::string line;             // Bien tam de luu tung dong trong file
    while (std::getline(fin, line)) {
        if (!line.empty()) 
            users.push_back(UserAccount::deserialize(line));
        // Neu dong khong rong, thi chuyen tu chuoi sang doi tuong UserAccount roi them vao danh sach
    }

    return true;  // Tra ve true neu doc file thanh cong
}

// Ham ghi danh sach nguoi dung ra file
bool UserManager::saveToFile(const std::string& filename) {
    std::ofstream fout(filename);  // Mo file de ghi
    if (!fout) return false;       // Neu mo file that bai thi tra ve false

    for (const auto& user : users) {
        fout << user.serialize() << "\n";
        // Chuyen doi tuong UserAccount thanh chuoi roi ghi ra file
    }

    return true;  // Ghi thanh cong
}

// Ham backup chi don gian la goi lai saveToFile voi ten file khac
bool UserManager::backup(const std::string& backupFile) {
    return saveToFile(backupFile);
}

// Tim nguoi dung theo ten dang nhap
UserAccount* UserManager::findUser(const std::string& username) {
    for (auto& user : users) {
        if (user.username == username) return &user;
        // Neu tim thay user co username trung khop, tra ve con tro toi user do
    }
    return nullptr;  // Khong tim thay thi tra ve nullptr
}

// Dang ky nguoi dung moi
bool UserManager::registerUser(const UserAccount& user) {
    if (findUser(user.username)) return false;
    // Neu da ton tai username thi khong cho dang ky

    users.push_back(user);  // Them user moi vao danh sach
    return true;            // Dang ky thanh cong
}

// Dang nhap nguoi dung
bool UserManager::login(const std::string& username, const std::string& password, UserAccount*& outUser) {
    UserAccount* user = findUser(username);  // Tim user theo ten dang nhap
    if (!user) return false;                 // Neu khong tim thay thi tra ve false

    if (user->hashedPassword == sha256(password)) {
        // So sanh mat khau da bam (hash) voi mat khau bam tu password nhap vao
        outUser = user;  // Gan con tro outUser vao user nay
        return true;     // Dang nhap thanh cong
    }

    return false;  // Mat khau sai
}

// Doi mat khau cho user
bool UserManager::changePassword(UserAccount& user, const std::string& newPassword) {
    user.hashedPassword = sha256(newPassword);  // Bam mat khau moi roi gan vao user
    user.isAutoGeneratedPassword = false;       // Danh dau rang mat khau khong phai tu dong tao
    return true;                                // Doi mat khau thanh cong
}
